<script>
  import { data, setData, buildData, selected } from "./state.slim.js";
  import Row from "./Row.slim";

  const add = () => setData(d => [...d, ...buildData(1000)]);
  const clear = () => setData([]);
  const partialUpdate = () => { for (let i = 0, d = data(), len = d.length; i < len; i += 10) d[i].setLabel((l) => l + " !!!") };
  const run = () => {
    setData(buildData(1000));
  };
  const runLots = () => {
    setData(buildData(10000));
  };
  const swapRows = () => setData(d => {
    if (d.length > 998) {
      const clone = d.slice();
      const tmp = clone[1];
      clone[1] = clone[998];
      clone[998] = tmp;
      return clone;
    }
    return d;
  });
</script>

<div id="main" class="container">
  <div class="jumbotron">
    <div class="row">
      <div class="col-md-6">
        <h1>Slim</h1>
      </div>
      <div class="col-md-6">
        <div class="row">
          <div class="col-sm-6 smallpad">
            <button type="button" class="btn btn-primary btn-block" id="run" :onclick="run">Create 1,000 rows</button>
          </div>
          <div class="col-sm-6 smallpad">
            <button type="button" class="btn btn-primary btn-block" id="runlots" :onclick="runLots">
              Create 10,000 rows
            </button>
          </div>
          <div class="col-sm-6 smallpad">
            <button type="button" class="btn btn-primary btn-block" id="add" :onclick="add">Append 1,000 rows</button>
          </div>
          <div class="col-sm-6 smallpad">
            <button type="button" class="btn btn-primary btn-block" id="update" :onclick="partialUpdate">
              Update every 10th row
            </button>
          </div>
          <div class="col-sm-6 smallpad">
            <button type="button" class="btn btn-primary btn-block" id="clear" :onclick="clear">Clear</button>
          </div>
          <div class="col-sm-6 smallpad">
            <button type="button" class="btn btn-primary btn-block" id="swaprows" :onclick="swapRows">Swap Rows</button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <table class="table table-hover table-striped test-data">
    <tbody>
      <Row :each="row in data()" :row="row" />
    </tbody>
  </table>
  <span class="preloadicon glyphicon glyphicon-remove" aria-hidden="true"></span>
</div>
