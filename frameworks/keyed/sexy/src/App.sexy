<div class="jumbotron">
    <div class="row">
        <div class="col-md-6">
            <h1>Sexy framework 0.5.2 (keyed) pre-alpha</h1>
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-sm-6 smallpad">
                  <button type="button" class="btn btn-primary btn-block" id="run" @click="run">Create 1,000 rows</button>
                </div>
                <div class="col-sm-6 smallpad">
                    <button type="button" class="btn btn-primary btn-block" id="runlots" @click="runLots">Create 10,000 rows</button>
                </div>
                <div class="col-sm-6 smallpad">
                    <button type="button" class="btn btn-primary btn-block" id="add" @click="add">Append 1,000 rows</button>
                </div>
                <div class="col-sm-6 smallpad">
                    <button type="button" class="btn btn-primary btn-block" id="update" @click="update">Update every 10th row</button>
                </div>
                <div class="col-sm-6 smallpad">
                    <button type="button" class="btn btn-primary btn-block" id="clear" @click="clear">Clear</button>
                </div>
                <div class="col-sm-6 smallpad">
                    <button type="button" class="btn btn-primary btn-block" id="swaprows" @click="swapRows">Swap Rows</button>
                </div>
            </div>
        </div>
    </div>
</div>
<table class="table table-hover table-striped test-data">
    <tbody>
    	@each(row in rows)
        <tr
            :key="row.id + '-' + row.label"
            :class="{'danger': row.id === selected}">
            <td class="col-md-1">{{row.id}}</td>
            <td class="col-md-4">
                <a @click="select(row.id)">{{row.label}}</a>
            </td>
            <td class="col-md-1">
                <a @click="remove(row.id)">
                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                </a>
            </td>
            <td class="col-md-6"></td>
        </tr>
        @endeach
    </tbody>
</table>
<span class="preloadicon glyphicon glyphicon-remove" aria-hidden="true"></span>

<script>
import { buildData, startMeasure, stopMeasure } from './store';

const selected = o(null);
const rows = o([]);

// function setRows(update) {
// 	if(update === undefined) {
// 		update = rows().slice()	
// 	}

// 	rows(update);
// }

// function key(row) {
// 	return row.id + '-' + row.label;
// }

function add() {
    startMeasure("add");

    let rowsValue = rows();
    let updatedValue = rowsValue.concat(buildData(1000));

    rows(updatedValue);
    stopMeasure();
}

function remove(id) {
    startMeasure("remove");

    let rowsValue = rows();

    let updatedValue = rowsValue.splice(rowsValue.findIndex(d => d.id === id), 1);

    rows(rowsValue);
    stopMeasure();
}

function select(id) {
    startMeasure("select");
    selected(id);
    stopMeasure();
}

function run() {
    startMeasure("run");
    rows(buildData());
    selected(undefined);
    stopMeasure();
}

function update() {
    startMeasure("update");

    let rowsValue = rows();

    for (let i = 0; i < rowsValue.length; i += 10) {
        rowsValue[i].label += ' !!!';
    }

    rows(rowsValue);
    stopMeasure();
}

function runLots() {
    startMeasure("runLots");
    rows(buildData(10000));
    selected(undefined);
    stopMeasure();
}

function clear() {
    startMeasure("clear");
    rows([]);
    selected(undefined);
    stopMeasure();
}

function swapRows() {
    startMeasure("swapRows");

    let rowsValue = rows();

    if (rowsValue.length > 998) {
        const d1 = rowsValue[1];
        const d998 = rowsValue[998];

        rowsValue[1] = d998;
        rowsValue[998] = d1;

        rows(rowsValue);
    }
    stopMeasure();
}
</script>
